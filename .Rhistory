knitr::opts_chunk$set(echo = TRUE)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(reshape2)
library(gridExtra)
library(dplyr)
library(tidyr)
# Load the Data
# setwd("C:/Users/Lixia/Documents/DataAnalystDegree/EDA")
loandata=read.csv('./data/prosperLoanData.csv')
# Brief data structure analysis
print(str(loandata))
data.str <- summary(loandata)
write.csv(data.str, './data/data.str.csv')
# LoanStatus
a <- ggplot(loandata, aes(x=LoanStatus))
a + geom_bar () +
coord_flip()
# ListCreation Date
loandata["ListingCreationDateStrf"] <- as.POSIXct(loandata$ListingCreationDate, format="%Y-%m-%d %H:%M:%S")
a <- ggplot(loandata, aes(ListingCreationDateStrf))
a + geom_histogram ()
#Term
a <- ggplot(loandata, aes(x=Term))
a + geom_bar ()
#BorrowerAPR
a <- ggplot(loandata, aes(x=BorrowerAPR))
a + geom_histogram ()
#ProsperScore
a <- ggplot(loandata, aes(x=ProsperScore))
a + geom_bar ()
#ListingCategory..numeric.
a <- ggplot(loandata, aes(x=ListingCategory..numeric.))
a + geom_bar () +
coord_flip()
#Occupation
a <- ggplot(loandata, aes(x=Occupation))
a + geom_bar () +
coord_flip()
#EmploymentStatus
a <- ggplot(loandata, aes(x=EmploymentStatus))
a + geom_bar ()
#EmploymentStatusDuration
a <- ggplot(loandata, aes(x=EmploymentStatusDuration))
a + geom_histogram ()
#IsBorrowerHomeowner
a <- ggplot(loandata, aes(x=IsBorrowerHomeowner))
a + geom_bar ()
#CreditScoreAvg
loandata["CreditScoreAvg"] <- (loandata$CreditScoreRangeLower + loandata$CreditScoreRangeUpper)/2
a <- ggplot(loandata, aes(x=CreditScoreAvg))
a + geom_histogram ()
#DebtToIncomeRatio
loandata %>%
filter(!is.na(DebtToIncomeRatio)) %>%
filter(DebtToIncomeRatio < quantile(DebtToIncomeRatio, 0.99)) %>%
ggplot(aes(x=DebtToIncomeRatio)) +
geom_histogram(binwidth=0.01)
#IncomeRange
a <- ggplot(loandata, aes(x=IncomeRange))
a + geom_bar ()
#StatedMonthlyIncome
loandata %>%
filter(StatedMonthlyIncome < quantile(StatedMonthlyIncome, 0.99)) %>%
ggplot(aes(x=StatedMonthlyIncome)) +
geom_histogram(binwidth =1000)
# LoanStatus
a <- ggplot(loandata, aes(x=LoanStatus))
a + geom_bar () +
coord_flip()
# ListCreation Date
loandata["ListingCreationDateStrf"] <- as.POSIXct(loandata$ListingCreationDate, format="%Y-%m-%d %H:%M:%S")
a <- ggplot(loandata, aes(ListingCreationDateStrf))
a + geom_histogram (aes(fill=LoanStatus), position='stack')
a + geom_histogram (aes(fill=LoanStatus), position='fill')
#Term
a <- ggplot(loandata, aes(x=Term))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill')
#BorrowerAPR
a <- ggplot(loandata, aes(x=BorrowerAPR))
a + geom_histogram (aes(fill=LoanStatus), position='stack')
a + geom_histogram (aes(fill=LoanStatus), position='fill')
#ProsperScore
a <- ggplot(loandata, aes(x=ProsperScore))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill')
#ListingCategory..numeric.
a <- ggplot(loandata, aes(x=ListingCategory..numeric.))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill')
#Occupation
a <- ggplot(loandata, aes(x=Occupation))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill') +
coord_flip()
#EmploymentStatus
a <- ggplot(loandata, aes(x=EmploymentStatus))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill')
#EmploymentStatusDuration
a <- ggplot(loandata, aes(x=EmploymentStatusDuration))
a + geom_histogram (aes(fill=LoanStatus), position='stack')
a + geom_histogram (aes(fill=LoanStatus), position='fill')
#IsBorrowerHomeowner
a <- ggplot(loandata, aes(x=IsBorrowerHomeowner))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill')
#CreditScoreAvg
loandata["CreditScoreAvg"] <- (loandata$CreditScoreRangeLower + loandata$CreditScoreRangeUpper)/2
a <- ggplot(loandata, aes(x=CreditScoreAvg))
a + geom_histogram (aes(fill=LoanStatus), position='stack')
a + geom_histogram (aes(fill=LoanStatus), position='fill')
#DebtToIncomeRatio
a <- loandata %>%
filter(!is.na(DebtToIncomeRatio)) %>%
filter(DebtToIncomeRatio < quantile(DebtToIncomeRatio, 0.99)) %>%
ggplot(aes(x=DebtToIncomeRatio, fill=LoanStatus))
a + geom_histogram (binwidth=0.01,  position='stack')
a + geom_histogram (binwidth=0.01,  position='fill')
#IncomeRange
a <- ggplot(loandata, aes(IncomeRange))
a + geom_bar (aes(fill=LoanStatus), position='stack')
a + geom_bar (aes(fill=LoanStatus), position='fill')
#StatedMonthlyIncome
loandata %>%
filter(StatedMonthlyIncome < quantile(StatedMonthlyIncome, 0.99)) %>%
ggplot(aes(x=StatedMonthlyIncome)) +
geom_histogram(binwidth = 1000, aes(fill=LoanStatus), position = 'stack')
loandata %>%
filter(StatedMonthlyIncome < quantile(StatedMonthlyIncome, 0.99)) %>%
ggplot(aes(StatedMonthlyIncome, fill=LoanStatus)) +
geom_histogram(binwidth = 1000, position = 'fill')
View(loandata)
df1=loandata['LoanStatus', 'ListingCreationDateStrf']
df1
myvars = c['LoanStatus', 'ListingCreationDateStrf']
myvars <- c['LoanStatus', 'ListingCreationDateStrf']
myvars <- c("v1", "v2", "v3")
myvars
myvars <- c('LoanStatus', 'ListingCreationDateStrf')
myvars
myvars <- ['LoanStatus', 'ListingCreationDateStrf']
c(myvars, 'test')
df1 = loandata[,c('LoanStatus', 'ListingCreationDateStrf')]
df1 = loandata[,[2,3]]
df1 = loandata[,1]
df1 = loandata[,c(2,3)]
df1 = loandata[,c('LoanStatus', 'ListingCreationDateStrf')]
View(df1)
View(df1)
df2 <- df1 %>% group_by ('LoanStatus') %>% summarise(mean)
df2 <- df1 %>% group_by ('LoanStatus') %>% summarise(mean.Date)
df1 = loandata[,c('LoanStatus', 'BorrowerAPR')]
View(df1)
df2 <- df1 %>% group_by ('LoanStatus') %>% summarise(mean)
df2 <- df1 %>% group_by ('LoanStatus') %>% summarise(mean(BorrowerAPR))
View(df2)
df2 <- df1 %>% group_by (LoanStatus) %>% summarise(mean(BorrowerAPR))
df1 <- loandata [, c("LoanStatus", "ListingCreationDateStrf")]
df2 <- df1 %>% group_by (LoanStatus) %>%
summarise (mean(ListingCreationDateStrf))
View(df2)
loandata[LoanStatus]
loandata['LoanStatus']
loandata$LoanStatus
within (loandata, {
LoanStatusF <- factor(LoanStatus)
})
summary(loandata$LoanStatusF)
df1$LoanStatusF <- factor(LoanStatus)
df1$LoanStatusF <- factor(loandata$LoanStatus)
View(df1)
describe(df1$LoanStatusF)
summary(df1$LoanStatusF)
str(df1$LoanStatusF)
a=c(1,2,3,4)
a
b=lapply(a, mean)
b
b=lapply(a, function(x) x+1)
b
b=lapply(a, function(x) {})
a=c(1,2,3,4)
b=lapply (a, function(x) {
x+1
})
b
a=c(1,2,3,4)
b=lapply (a, function(x) {
return x+2
a=c(1,2,3,4)
b=lapply (a, function(x) {
return (x+2)
})
distinct(loandata$LoanStatus)
str(loandata$loanStatus)
summary(loandata$loanStatus)
summary(df1$loanStatus)
summary(df1$LoanStatus)
str(loandata$LoanStatus)
loandata$LoanStatus <- factor(loandata$LoanStatus, c(
"Completed", "FinalPaymentInProgress", "Current",
"Past Due (1-15 days)", "Past Due (16-30 days)",
"Past Due (31-60 days)", "Past Due (61-90 days)",
"Past Due (91-120 days)", "Past Due (>120 days)",
"Chargedoff", "Defaulted", "Cancelled"
))
df1 <- loandata [, c("LoanStatus", "ListingCreationDateStrf")]
df2 <- df1 %>% group_by (LoanStatus) %>%
summarise (mean(ListingCreationDateStrf))
View(df2)
df2 <- df1 %>% group_by (LoanStatus) %>%
summarise (..count..)
df2 <- df1 %>% group_by (LoanStatus) %>%
summarise (count=n())
View(df2)
write.csv(df2, './data/LoanStatus.csv')
View(df2)
a=1:100
a
b=cut(a, breaks=10)
b
df1$ListingCreationDate.Strf.Hist <- cut (df1$ListingCreationDateStrf, breaks=30)
str(df1$ListingCreationDateStrf)
df1$ListingCreationDate.Strf.Hist <- cut (df1$ListingCreationDateStrf, breaks="day")
View(df1)
df1$ListingCreationDate.Strf.Hist <- cut (df1$ListingCreationDateStrf, breaks="month")
df1$ListingCreationDate.Strf.Hist <- cut (df1$ListingCreationDateStrf, breaks="quarter")
df1$ListingCreationDate.QT <- cut (df1$ListingCreationDateStrf, breaks="quarter")
df3 <- df1 %>% group_by (ListingCreationDate.QT, LoanStatus) %>%
summarise (count=n())
View(df3)
View(df3)
df3 <- df1 %>% group_by (ListingCreationDate.QT, LoanStatus) %>%
summarise (count=n()) %>%
spread (ListingCreationDate.QT, LoanStatus)
View(df3)
df3 <- df1 %>% group_by (ListingCreationDate.QT, LoanStatus) %>%
summarise (count=n()) %>%
spread (ListingCreationDate.QT, count)
View(df3)
df3 <- df1 %>% group_by (ListingCreationDate.QT, LoanStatus) %>%
summarise (count=n()) %>%
spread (LoanStatus, count)
View(df3)
write.csv(df3, './data/ListingCreationDate.csv')
df3 <- df1 %>% group_by (ListingCreationDate.QT, LoanStatus) %>%
summarise (count=n())
write.csv(df3, './data/ListingCreationDate.csv')
